{"version":3,"sources":["googleApi.module.js","google-client.provider.js"],"names":["angular","module","provider","clientId","apiLoadingPromise","clientLoadingPromise","scopes","apisToLoad","googleApis","cloudEndpoints","tryAutomaticAuth","apiLoaded","apiLoading","clientLoaded","clientLoading","apiLoadCallback","deferred","gapi","auth","authorize","client_id","scope","immediate","resolve","this","addApi","api","version","baseUrl","obj","push","setAutomaticAuth","addScope","setClientId","client","$get","$q","$window","afterClientLoaded","defer","_cmGoogleClientInitCallback","s","document","createElement","src","body","appendChild","promise","afterApiLoaded","then","forEach","endpoint","load"],"mappings":"CAAA,WACA,YACAA,SAAAC,OAAA,uBCFA,WACA,YACAD,SAAAC,OAAA,iBAAAC,SAAA,eAAA,WACA,GAAAC,GASAC,EAIAC,EAXAC,KAEAC,EAAA,EACAC,KACAC,KACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAEAC,EAAA,SAAAC,GACA,MAAAT,IACAI,GAAA,EACAC,GAAA,EACAF,EACAO,KAAAC,KAAAC,WAAAC,UAAAjB,EAAAkB,MAAAf,EAAAgB,WAAA,GAAA,WAAAN,EAAAO,YAEAP,EAAAO,WAKAC,MAAAC,OAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,KAUA,OATAA,GAAAH,IAAAA,EACAG,EAAAF,QAAAA,EACApB,IACA,mBAAAqB,GACApB,EAAAsB,KAAAD,IAEAA,EAAAD,QAAAA,EACAnB,EAAAqB,KAAAD,IAEAL,MAGAA,KAAAO,iBAAA,WAGA,MAFArB,IAAA,EACAc,KAAAQ,SAAA,kDACAR,MAGAA,KAAAQ,SAAA,SAAAX,GAEA,MADAf,IAAA,IAAAe,EACAG,MAGAA,KAAAS,YAAA,SAAAC,GAEA,MADA/B,GAAA+B,EACAV,MAGAA,KAAAW,MAAA,KAAA,UAAA,SAAAC,EAAAC,GACA,OACAC,kBAAA,WACA,IAAAzB,IAAAC,EAAA,CACAA,GAAA,EACAT,EAAA+B,EAAAG,QACAF,EAAAG,4BAAA,WACA3B,GAAA,EACAC,GAAA,EACAT,EAAAkB,UAEA,IAAAkB,GAAAC,SAAAC,cAAA,SACAF,GAAAG,IAAA,0EACAF,SAAAG,KAAAC,YAAAL,GAEA,MAAApC,GAAA0C,SAEAC,eAAA,WAaA,MAZArC,IAAAC,IACAR,EAAAgC,EAAAG,QACAf,KAAAc,oBAAAW,KAAA,WACArC,GAAA,EACAZ,QAAAkD,QAAAzC,EAAA,SAAA0C,GACAlC,KAAAiB,OAAAkB,KAAAD,EAAAzB,IAAAyB,EAAAxB,QAAA,WAAAZ,EAAAX,IAAA+C,EAAAvB,WAEA5B,QAAAkD,QAAA1C,EAAA,SAAAkB,GACAT,KAAAiB,OAAAkB,KAAA1B,EAAAA,IAAAA,EAAAC,QAAA,WAAAZ,EAAAX,UAIAA,EAAA2C,SAEA5C,SAAAA,EACAG,OAAAA","file":"angular-google-client.min.js","sourcesContent":["(function() {\n  'use strict';\n  angular.module('cm-google-api', []);\n})();\n","(function() {\n  'use strict';\n  angular.module('cm-google-api').provider('googleClient', function () {\n    var clientId;\n    //FIXME: Set() is not compatible to all browser, so I'll have to wait...\n    var scopes = [];\n\n    var apisToLoad = 0;\n    var googleApis = [];\n    var cloudEndpoints = [];\n    var tryAutomaticAuth = false;\n\n    var apiLoadingPromise;\n    var apiLoaded = false;\n    var apiLoading = false;\n\n    var clientLoadingPromise;\n    var clientLoaded = false;\n    var clientLoading = false;\n\n    var apiLoadCallback = function(deferred) {\n      if (--apisToLoad === 0) {\n        apiLoaded = true;\n        apiLoading = false;\n        if(tryAutomaticAuth){\n          gapi.auth.authorize({'client_id': clientId, 'scope': scopes, 'immediate': true}, function(){deferred.resolve();});\n        }else{\n          deferred.resolve();\n        }\n      }\n    };\n\n    this.addApi = function(api, version, baseUrl){\n      var obj = {};\n      obj.api = api;\n      obj.version = version;\n      apisToLoad++;\n      if(typeof baseUrl === 'undefined'){\n        googleApis.push(obj);\n      }else{\n        obj.baseUrl = baseUrl;\n        cloudEndpoints.push(obj);\n      }\n      return this;\n    };\n\n    this.setAutomaticAuth = function(){\n      tryAutomaticAuth = true;\n      this.addScope('https://www.googleapis.com/auth/userinfo.email');\n      return this;\n    };\n\n    this.addScope = function(scope){\n      scopes += ' ' + scope\n      return this;\n    };\n\n    this.setClientId = function(client){\n      clientId = client;\n      return this;\n    };\n\n    this.$get = ['$q', '$window', function ($q, $window) {\n      return{\n        afterClientLoaded: function(){\n          if(!clientLoaded && !clientLoading){\n            clientLoading = true;\n            clientLoadingPromise = $q.defer();\n            $window._cmGoogleClientInitCallback = function(){\n              clientLoaded = true;\n              clientLoading = false;\n              clientLoadingPromise.resolve();\n            };\n            var s = document.createElement('script');\n            s.src = 'https://apis.google.com/js/client.js?onload=_cmGoogleClientInitCallback';\n            document.body.appendChild(s);\n          }\n          return clientLoadingPromise.promise;\n        },\n        afterApiLoaded: function(){\n          if(!apiLoaded && !apiLoading){\n            apiLoadingPromise = $q.defer();\n            this.afterClientLoaded().then(function(){\n              apiLoading = true;\n              angular.forEach(cloudEndpoints, function(endpoint){\n                gapi.client.load(endpoint.api, endpoint.version, function(){apiLoadCallback(apiLoadingPromise);}, endpoint.baseUrl);\n              });\n              angular.forEach(googleApis, function(api){\n                gapi.client.load(api.api, api.version, function(){apiLoadCallback(apiLoadingPromise);});\n              });\n            });\n          }\n          return apiLoadingPromise.promise;\n        },\n        clientId: clientId,\n        scopes: scopes\n      };\n    }];\n  });\n})();\n"],"sourceRoot":"/source/"}