{"version":3,"sources":["googleApi.module.js","google-client.provider.js","google-client.service.js"],"names":["angular","module","provider","clientId","apiLoadingPromise","clientLoadingPromise","scopes","apisToLoad","googleApis","cloudEndpoints","tryAutomaticAuth","apiLoaded","apiLoading","clientLoaded","clientLoading","apiLoadCallback","deferred","gapi","auth","authorize","client_id","scope","immediate","resolve","this","addApi","api","version","baseUrl","obj","push","setAutomaticAuth","addScope","setClientId","client","$get","$q","$window","$document","afterClientLoaded","defer","_cmGoogleClientInitCallback","script","createElement","onerror","e","reject","src","body","appendChild","promise","afterApiLoaded","then","forEach","endpoint","load","service","googleClient","execute","apiMethod","params","split","method","m","request","resp","reason"],"mappings":"CAAA,WACA,YACAA,SAAAC,OAAA,uBCFA,WACA,YACAD,SAAAC,OAAA,iBAAAC,SAAA,eAAA,WACA,GAAAC,GAQAC,EAIAC,EAXAC,KAEAC,EAAA,EACAC,KACAC,KACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAEAC,EAAA,SAAAC,GACA,MAAAT,IACAI,GAAA,EACAC,GAAA,EACAF,EACAO,KAAAC,KAAAC,WAAAC,UAAAjB,EAAAkB,MAAAf,EAAAgB,WAAA,GAAA,WAAAN,EAAAO,YAEAP,EAAAO,WAKAC,MAAAC,OAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,KAUA,OATAA,GAAAH,IAAAA,EACAG,EAAAF,QAAAA,EACApB,IACA,mBAAAqB,GACApB,EAAAsB,KAAAD,IAEAA,EAAAD,QAAAA,EACAnB,EAAAqB,KAAAD,IAEAL,MAGAA,KAAAO,iBAAA,WAGA,MAFArB,IAAA,EACAc,KAAAQ,SAAA,kDACAR,MAGAA,KAAAQ,SAAA,SAAAX,GAEA,MADAf,IAAA,IAAAe,EACAG,MAGAA,KAAAS,YAAA,SAAAC,GAEA,MADA/B,GAAA+B,EACAV,MAGAA,KAAAW,MAAA,KAAA,UAAA,YAAA,SAAAC,EAAAC,EAAAC,GACA,OACAC,kBAAA,WACA,IAAA1B,IAAAC,EAAA,CACAA,GAAA,EACAT,EAAA+B,EAAAI,QACAH,EAAAI,4BAAA,WACA5B,GAAA,EACAC,GAAA,EACAT,EAAAkB,UAEA,IAAAmB,GAAAJ,EAAA,GAAAK,cAAA,SACAD,GAAAE,QAAA,SAAAC,GACAxC,EAAAyC,OAAAD,IAEAH,EAAAK,IAAA,0EACAT,EAAA,GAAAU,KAAAC,YAAAP,GAEA,MAAArC,GAAA6C,SAEAC,eAAA,WAgBA,MAfAxC,IAAAC,IACAR,EAAAgC,EAAAI,QACA5B,GAAA,EACAY,KAAAe,oBAAAa,KAAA,WACApD,QAAAqD,QAAA5C,EAAA,SAAA6C,GACArC,KAAAiB,OAAAqB,KAAAD,EAAA5B,IAAA4B,EAAA3B,QAAA,WAAAZ,EAAAX,IAAAkD,EAAA1B,WAEA5B,QAAAqD,QAAA7C,EAAA,SAAAkB,GACAT,KAAAiB,OAAAqB,KAAA7B,EAAAA,IAAAA,EAAAC,QAAA,WAAAZ,EAAAX,QAGA,SAAAyC,GACAzC,EAAA0C,OAAAD,MAGAzC,EAAA8C,SAEA/C,SAAAA,EACAG,OAAAA,UCpGA,WACA,YACAN,SAAAC,OAAA,iBAAAuD,QAAA,uBAAA,KAAA,eAAA,SAAApB,EAAAqB,GACAjC,KAAAkC,QAAA,SAAAC,EAAAC,GACA,GAAA5C,GAAAoB,EAAAI,OAwBA,OAvBAiB,GAAAN,iBAAAC,KAAA,WACAO,EAAAA,EAAAE,MAAA,IACA,IAAAC,GAAA7C,KAAAiB,MACAlC,SAAAqD,QAAAM,EAAA,SAAAI,GACAD,EAAAA,EAAAC,IACAD,EACA,IAAAE,EAEAA,GADA,mBAAAJ,GACAE,IAEAA,EAAAF,GAEAI,EAAAZ,KACA,SAAAa,GACAjD,EAAAO,QAAA0C,IAEA,SAAAC,GACAlD,EAAA8B,OAAAoB,MAGA,SAAArB,GACA7B,EAAA8B,OAAAD,KAEA7B,EAAAkC","file":"angular-google-client.min.js","sourcesContent":["(function() {\n  'use strict';\n  angular.module('cm-google-api', []);\n})();\n","(function() {\n  'use strict';\n  angular.module('cm-google-api').provider('googleClient', function () {\n    var clientId;\n    var scopes = [];\n\n    var apisToLoad = 0;\n    var googleApis = [];\n    var cloudEndpoints = [];\n    var tryAutomaticAuth = false;\n\n    var apiLoadingPromise;\n    var apiLoaded = false;\n    var apiLoading = false;\n\n    var clientLoadingPromise;\n    var clientLoaded = false;\n    var clientLoading = false;\n\n    var apiLoadCallback = function(deferred) {\n      if (--apisToLoad === 0) {\n        apiLoaded = true;\n        apiLoading = false;\n        if(tryAutomaticAuth){\n          gapi.auth.authorize({'client_id': clientId, 'scope': scopes, 'immediate': true}, function(){deferred.resolve();});\n        }else{\n          deferred.resolve();\n        }\n      }\n    };\n\n    this.addApi = function(api, version, baseUrl){\n      var obj = {};\n      obj.api = api;\n      obj.version = version;\n      apisToLoad++;\n      if(typeof baseUrl === 'undefined'){\n        googleApis.push(obj);\n      }else{\n        obj.baseUrl = baseUrl;\n        cloudEndpoints.push(obj);\n      }\n      return this;\n    };\n\n    this.setAutomaticAuth = function(){\n      tryAutomaticAuth = true;\n      this.addScope('https://www.googleapis.com/auth/userinfo.email');\n      return this;\n    };\n\n    this.addScope = function(scope){\n      scopes += ' ' + scope;\n      return this;\n    };\n\n    this.setClientId = function(client){\n      clientId = client;\n      return this;\n    };\n\n    this.$get = ['$q', '$window', '$document', function ($q, $window, $document) {\n      return{\n        afterClientLoaded: function(){\n          if(!clientLoaded && !clientLoading){\n            clientLoading = true;\n            clientLoadingPromise = $q.defer();\n            $window._cmGoogleClientInitCallback = function(){\n              clientLoaded = true;\n              clientLoading = false;\n              clientLoadingPromise.resolve();\n            };\n            var script = $document[0].createElement('script');\n            script.onerror = function (e) {\n              clientLoadingPromise.reject(e);\n            };\n            script.src = 'https://apis.google.com/js/client.js?onload=_cmGoogleClientInitCallback';\n            $document[0].body.appendChild(script);\n          }\n          return clientLoadingPromise.promise;\n        },\n        afterApiLoaded: function(){\n          if(!apiLoaded && !apiLoading){\n            apiLoadingPromise = $q.defer();\n            apiLoading = true;\n            this.afterClientLoaded().then(function(){\n              angular.forEach(cloudEndpoints, function(endpoint){\n                gapi.client.load(endpoint.api, endpoint.version, function(){apiLoadCallback(apiLoadingPromise);}, endpoint.baseUrl);\n              });\n              angular.forEach(googleApis, function(api){\n                gapi.client.load(api.api, api.version, function(){apiLoadCallback(apiLoadingPromise);});\n              });\n            },\n            function(e){\n              apiLoadingPromise.reject(e);\n            });\n          }\n          return apiLoadingPromise.promise;\n        },\n        clientId: clientId,\n        scopes: scopes\n      };\n    }];\n  });\n})();\n","(function() {\n  'use strict';\n  angular.module('cm-google-api').service('googleClientService', ['$q', 'googleClient', function ($q, googleClient) {\n    this.execute = function(apiMethod, params){\n      var deferred = $q.defer();\n      googleClient.afterApiLoaded().then(function(){\n        apiMethod = apiMethod.split('.');\n        var method = gapi.client;\n        angular.forEach(apiMethod, function(m){\n          method = method[m];\n        }, method);\n        var request;\n        if(typeof params === 'undefined'){\n          request = method();\n        }else{\n          request = method(params);\n        }\n        request.then(\n          function(resp){\n            deferred.resolve(resp);\n          },\n          function(reason){\n            deferred.reject(reason);\n          });\n      },\n      function(e){\n        deferred.reject(e);\n      });\n      return deferred.promise;\n    };\n  }]);\n})();\n"],"sourceRoot":"/source/"}