{"version":3,"sources":["googleApi.module.js","google-client.provider.js","google-client.service.js","google-picker.directive.js"],"names":["angular","module","provider","clientId","apiLoadingPromise","scriptsLoadingPromise","scopes","apisToLoad","scriptsToLoad","googleApis","cloudEndpoints","tryAutomaticAuth","loadClient","loadPicker","apiLoaded","apiLoading","scriptsLoaded","scriptsLoading","apiLoadCallback","gapi","auth","authorize","client_id","scope","immediate","resolve","scriptsLoadCallback","this","addApi","api","version","baseUrl","obj","push","setAutomaticAuth","addScope","loadClientLibrary","loadPickerLibrary","setClientId","client","$get","$q","$window","$document","afterScriptsLoaded","defer","_cmGoogleClientInitCallback","load","callback","script","createElement","onerror","e","reject","src","body","appendChild","promise","afterApiLoaded","then","forEach","endpoint","service","googleClient","execute","apiMethod","params","deferred","split","method","m","request","resp","reason","directive","authDeferred","restrict","link","element","attrs","authUser","oauthToken","handleAuthResult","authResult","error","access_token","pickerCallback","data","action","google","picker","Action","LOADED","CANCEL","PICKED","openPicker","PickerBuilder","addView","ViewId","DOCS","setOAuthToken","setCallback","build","setVisible","bind"],"mappings":"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","file":"angular-google-client.min.js","sourcesContent":["(function() {\n  'use strict';\n  angular.module('cm-google-api', []);\n})();\n","(function() {\n  'use strict';\n  angular.module('cm-google-api').provider('googleClient', function () {\n    var clientId;\n    var scopes = [];\n\n    var apisToLoad = 0;\n    var scriptsToLoad = 0;\n    var googleApis = [];\n    var cloudEndpoints = [];\n    var tryAutomaticAuth = false;\n    var loadClient = false;\n    var loadPicker = false;\n\n    var apiLoadingPromise;\n    var apiLoaded = false;\n    var apiLoading = false;\n\n    var scriptsLoadingPromise;\n    var scriptsLoaded = false;\n    var scriptsLoading = false;\n\n    var apiLoadCallback = function() {\n      if (--apisToLoad === 0) {\n        apiLoaded = true;\n        apiLoading = false;\n        if(tryAutomaticAuth){\n          gapi.auth.authorize({'client_id': clientId, 'scope': scopes, 'immediate': true}, function(){apiLoadingPromise.resolve();});\n        }else{\n          apiLoadingPromise.resolve();\n        }\n      }\n    };\n\n    var scriptsLoadCallback = function() {\n      if (--scriptsToLoad === 0) {\n        scriptsLoaded = true;\n        scriptsLoading = false;\n        scriptsLoadingPromise.resolve();\n      }\n    };\n\n    this.addApi = function(api, version, baseUrl){\n      var obj = {};\n      obj.api = api;\n      obj.version = version;\n      apisToLoad++;\n      if(typeof baseUrl === 'undefined'){\n        googleApis.push(obj);\n      }else{\n        obj.baseUrl = baseUrl;\n        cloudEndpoints.push(obj);\n      }\n      return this;\n    };\n\n    this.setAutomaticAuth = function(){\n      tryAutomaticAuth = true;\n      this.addScope('https://www.googleapis.com/auth/userinfo.email');\n      return this;\n    };\n\n    this.loadClientLibrary = function(){\n      loadClient = true;\n      scriptsToLoad++;\n      return this;\n    };\n    this.loadPickerLibrary = function(){\n      loadPicker = true;\n      scriptsToLoad++;\n      return this;\n    };\n\n    this.addScope = function(scope){\n      scopes += ' ' + scope;\n      return this;\n    };\n\n    this.setClientId = function(client){\n      clientId = client;\n      return this;\n    };\n\n    this.$get = ['$q', '$window', '$document', function ($q, $window, $document) {\n      return{\n        afterScriptsLoaded: function(){\n          if(!scriptsLoaded && !scriptsLoading){\n            scriptsLoading = true;\n            scriptsLoadingPromise = $q.defer();\n            $window._cmGoogleClientInitCallback = function(){\n              if(loadClient){\n                gapi.load('client', {'callback': scriptsLoadCallback});\n              }\n              if(loadPicker){\n                gapi.load('picker', {'callback': scriptsLoadCallback});\n              }\n            };\n            var script = $document[0].createElement('script');\n            script.onerror = function (e) {\n              scriptsLoadingPromise.reject(e);\n            };\n            script.src = 'https://apis.google.com/js/api.js?onload=_cmGoogleClientInitCallback';\n            $document[0].body.appendChild(script);\n          }\n          return scriptsLoadingPromise.promise;\n        },\n        afterApiLoaded: function(){\n          if(!apiLoaded && !apiLoading){\n            apiLoadingPromise = $q.defer();\n            apiLoading = true;\n            this.afterScriptsLoaded().then(function(){\n              angular.forEach(cloudEndpoints, function(endpoint){\n                gapi.client.load(endpoint.api, endpoint.version, apiLoadCallback, endpoint.baseUrl);\n              });\n              angular.forEach(googleApis, function(api){\n                gapi.client.load(api.api, api.version, apiLoadCallback);\n              });\n            },\n            function(e){\n              apiLoadingPromise.reject(e);\n            });\n          }\n          return apiLoadingPromise.promise;\n        },\n        clientId: clientId,\n        scopes: scopes\n      };\n    }];\n  });\n})();\n","(function() {\n  'use strict';\n  angular.module('cm-google-api').service('googleClientService', ['$q', 'googleClient', function ($q, googleClient) {\n    this.execute = function(apiMethod, params){\n      var deferred = $q.defer();\n      googleClient.afterApiLoaded().then(function(){\n        apiMethod = apiMethod.split('.');\n        var method = gapi.client;\n        angular.forEach(apiMethod, function(m){\n          method = method[m];\n        }, method);\n        var request;\n        if(typeof params === 'undefined'){\n          request = method();\n        }else{\n          request = method(params);\n        }\n        request.then(\n          function(resp){\n            deferred.resolve(resp);\n          },\n          function(reason){\n            deferred.reject(reason);\n          });\n      },\n      function(e){\n        deferred.reject(e);\n      });\n      return deferred.promise;\n    };\n  }]);\n})();\n","(function() {\n  'use strict';\n\tangular.module('cm-google-api').directive('cmGooglePicker', ['googleClient', '$q', function(googleClient, $q){\n    var authDeferred = $q.defer();\n\t\treturn {\n\t\t\t'restrict': 'A',\n\t\t\tlink: function (scope, element, attrs) {\n        var oauthToken = null;\n\n        function authUser() {\n          if(!oauthToken){\n            gapi.auth.authorize( { 'client_id': googleClient.clientId, 'scope': 'https://www.googleapis.com/auth/drive', 'immediate': false },  handleAuthResult);\n          }\n          return authDeferred.promise;\n        }\n\n        function handleAuthResult(authResult) {\n          if (authResult && !authResult.error) {\n            oauthToken = authResult.access_token;\n            authDeferred.resolve();\n          }\n        }\n\n        function pickerCallback (data) {\n          console.log(data.action);\n          if (data.action == google.picker.Action.LOADED) {\n            console.log(data);\n          }\n          if (data.action == google.picker.Action.CANCEL) {\n            console.log(data);\n          }\n          if (data.action == google.picker.Action.PICKED) {\n            console.log(data);\n          }\n        }\n\n        function openPicker(){\n          googleClient.afterScriptsLoaded().then(\n            function(){\n              authUser().then(function(){\n                var picker = new google.picker.PickerBuilder().\n                  addView(google.picker.ViewId.DOCS).\n                  setOAuthToken(oauthToken).\n                  setCallback(pickerCallback).\n                  build();\n                picker.setVisible(true);\n              });\n            },\n            function(){}\n          );\n        }\n\n        element.bind('click', function (e) {\n          console.log('click')\n          openPicker();\n        });\n    \t}\n\t\t}\n\t}]);\n})();\n"],"sourceRoot":"/source/"}